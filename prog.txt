# ***Defining Quantum registers***

router = QuantumRegister(2, 'r')
router_check = QuantumRegister(2, 'rc')
rc_ancillas = QuantumRegister(6, 'rca')
header = QuantumRegister(2, 'h')
header_check = QuantumRegister(2, 'hc')
hc_ancillas = QuantumRegister(6, 'hca')
routing_logic = QuantumRegister(2, 'fwd')
output = QuantumRegister(2, 'out')
qc = QuantumCircuit(router, router_check, rc_ancillas, header, header_check, hc_ancillas, routing_logic, output)
qc.x(3)
qc.x(13)
qc.cx(0,4)
qc.cx(3,4)
qc.cx(1,5)
qc.cx(3,5)
A = AND(2,[1,1])
qc.append(A,[4,5,6])
qc.cx(0,7)
qc.cx(3,7)
qc.cx(1,8)
qc.cx(2,8)
A = AND(2,[1,1])
qc.append(A,[7,8,9])
qc.cx(10,14)
qc.cx(13,14)
qc.x(15)
A = AND(2,[1,1])
qc.append(A,[14,15,16])
qc.x(17)
qc.cx(11,18)
qc.cx(12,18)
A = AND(2,[1,1])
qc.append(A,[17,18,19])
A = AND(2,[1,1])
qc.append(A,[6,16,20])
qc.cx(20,1)
qc.barrier()
A = AND(2,[1,1])
qc.append(A,[9,19,21])
qc.cx(21,0)
qc.cx(21,1)
qc.barrier()

qc.cx(0,22)
qc.cx(1,23)

qc.draw(output='mpl')
